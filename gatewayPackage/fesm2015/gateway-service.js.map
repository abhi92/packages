{"version":3,"file":"gateway-service.js","sources":["../../../projects/data-service/src/lib/data-service.service.ts","../../../projects/data-service/src/lib/data-service.component.ts","../../../projects/data-service/src/lib/data-service.module.ts","../../../projects/data-service/src/public-api.ts","../../../projects/data-service/src/gateway-service.ts"],"sourcesContent":["/**\n * Created by kuldeep on 10/4/17.\n */\n\n\nimport { throwError as observableThrowError, Observable, Subject } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { Injector } from '@angular/core'\nimport { Router, NavigationStart } from \"@angular/router\";\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { catchError, map, refCount, publishLast, takeLast, take} from 'rxjs/operators';\n\ndeclare var $: any;\n\n\n// const API_KEY = makeStateKey('api');\n@Injectable(\n    {\n        providedIn:'root'\n    }\n)\nexport class DataService {\n    api: any;\n    public dataServiceCart: Subject<any> = new Subject<any>();\n\n    constructor(public injector: Injector, private _router: Router, private _http: HttpClient) {\n        \n    }\n\n    callRestful(type: string, url: string, options?: { params?: {}, body?: {}, headerData?: {} }) {\n        let params;\n        let body;\n\n        if (options != undefined && options['params'] != undefined)\n            params = options['params'];\n        if (options != undefined && options['body'] != undefined)\n            body = options['body'];\n\n        let headers = {\n            'Content-Type': 'application/json',\n            'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE',\n            'access-control-allow-origin': '*'\n        };\n\n        if (options && options.headerData && Object.keys(options.headerData).length) {\n            for(let headerKey in options.headerData){\n              headers[headerKey] = options.headerData[headerKey];\n            }\n            if (options.headerData['Content-Type']) {\n                headers['Content-Type'] = options.headerData['Content-Type'];\n            }\n            if (options.headerData['Access-Control-Allow-Methods']) {\n                headers['Access-Control-Allow-Methods'] = options.headerData['Access-Control-Allow-Methods'];\n            }\n            \n        }\n        let start_time = new Date().getTime();\n \n        switch (type) {\n            case 'GET':\n                let getOptions = {};\n                if (headers[\"Content-Type\"] && headers[\"Content-Type\"].indexOf(\"text\") > -1) {\n                    getOptions = { params: params, headers: headers, responseType: \"text\", withCredentials: true };\n                } else {\n                    getOptions = { params, headers, withCredentials: true };\n                }             \n                return this._http.get(url, getOptions).pipe(map(res => {\n                    let request_time = new Date().getTime() - start_time;\n                    return res;\n                }), catchError(err => this.handleError(err)));\n            case 'POST':\n                return this._http.post(url, body, { headers, withCredentials: true }).pipe(map(res => {\n                    let request_time = new Date().getTime() - start_time;\n                    return res;\n                }), catchError(err => this.handleError(err)));\n            case 'PUT':\n                return this._http.put(url, body, { headers, withCredentials: true }).pipe(map(res => res), catchError(err => this.handleError(err)));\n            case 'DELETE':\n                return this._http.delete(url, { headers, withCredentials: true }).pipe(map(res => res), catchError(err => this.handleError(err)));\n            default:\n                return null;\n        }\n    }\n    private handleError(error: HttpErrorResponse | any) {\n        return observableThrowError(error);;\n    }\n \n    showMessage(cssClass, msg) {\n        //console.log(\"show message cssClass \" + cssClass + \" msg is \" + msg);\n            var x = document.getElementById(\"alert-box\");\n            var classType = \"\";\n            x.innerHTML = msg;\n            if (cssClass == \"error\") classType = \"show-error\";\n            if (cssClass == \"success\") classType = \"show-sucess\";\n            x.className = classType;\n            setTimeout(function () {\n                x.className = x.className.replace(classType, \"\");\n            }, 5000);\n\n    }\n\n    public getCookie(name: string) {\n        //TODO test split and value\n            let ca: Array<string> = document.cookie.split('; ');\n            let caLen: number = ca.length;\n            let cookieName = name + \"=\";\n            let c: string;\n\n            for (let i: number = 0; i < caLen; i += 1) {\n                c = ca[i].replace(/^\\s\\+/g, \"\");\n                if (c.indexOf(cookieName) == 0) {\n                    return c.substring(cookieName.length, c.length);\n                }\n            }\n        return \"\";\n    }\n\n    public deleteCookie(name) {\n        this.setCookie(name, \"\", -1);\n    }\n\n    public setCookie(name: string, value: string, expireDays: number) {\n            let d: Date = new Date();\n            d.setTime(d.getTime() + expireDays * 24 * 60 * 60 * 1000);\n            let expires: string = \"expires=\" + d.toUTCString();\n            document.cookie = name + \"=\" + value + \"; \" + expires + \";\";\n    }\n\n    public timestampToData(ts) {\n        let d = new Date(ts);\n        let dd: any = d.getDate();\n        let mm: any = (d.getMonth() + 1);\n        let yy = d.getFullYear();\n\n        if (dd < 10) {\n            dd = '0' + dd;\n        }\n        if (mm < 10) {\n            mm = '0' + mm;\n        }\n        return dd + '-' + mm + '-' + yy;\n    }\n\n    public getTimeFromTimestamp(ts, isNoTime?: boolean) {\n    }\n\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-dataService',\n  template: `\n    <p>\n      data-service works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class DataServiceComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { DataServiceComponent } from './data-service.component';\n\n\n\n@NgModule({\n  declarations: [DataServiceComponent],\n  imports: [\n  ],\n  exports: [DataServiceComponent]\n})\nexport class DataServiceModule { }\n","/*\n * Public API Surface of data-service\n */\n\nexport * from './lib/data-service.service';\nexport * from './lib/data-service.component';\nexport * from './lib/data-service.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["observableThrowError"],"mappings":"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"}