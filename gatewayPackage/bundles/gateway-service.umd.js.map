{"version":3,"file":"gateway-service.umd.js","sources":["../../../projects/data-service/src/lib/data-service.service.ts","../../../projects/data-service/src/lib/data-service.component.ts","../../../projects/data-service/src/lib/data-service.module.ts","../../../projects/data-service/src/public-api.ts","../../../projects/data-service/src/gateway-service.ts"],"sourcesContent":["/**\n * Created by kuldeep on 10/4/17.\n */\n\n\nimport { throwError as observableThrowError, Observable, Subject } from 'rxjs';\nimport { Injectable } from '@angular/core';\nimport { Injector } from '@angular/core'\nimport { Router, NavigationStart } from \"@angular/router\";\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { catchError, map, refCount, publishLast, takeLast, take} from 'rxjs/operators';\n\ndeclare var $: any;\n\n\n// const API_KEY = makeStateKey('api');\n@Injectable(\n    {\n        providedIn:'root'\n    }\n)\nexport class DataService {\n    api: any;\n    public dataServiceCart: Subject<any> = new Subject<any>();\n\n    constructor(public injector: Injector, private _router: Router, private _http: HttpClient) {\n        \n    }\n\n    callRestful(type: string, url: string, options?: { params?: {}, body?: {}, headerData?: {} }) {\n        let params;\n        let body;\n\n        if (options != undefined && options['params'] != undefined)\n            params = options['params'];\n        if (options != undefined && options['body'] != undefined)\n            body = options['body'];\n\n        let headers = {\n            'Content-Type': 'application/json',\n            'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE',\n            'access-control-allow-origin': '*'\n        };\n\n        if (options && options.headerData && Object.keys(options.headerData).length) {\n            for(let headerKey in options.headerData){\n              headers[headerKey] = options.headerData[headerKey];\n            }\n            if (options.headerData['Content-Type']) {\n                headers['Content-Type'] = options.headerData['Content-Type'];\n            }\n            if (options.headerData['Access-Control-Allow-Methods']) {\n                headers['Access-Control-Allow-Methods'] = options.headerData['Access-Control-Allow-Methods'];\n            }\n            \n        }\n        let start_time = new Date().getTime();\n \n        switch (type) {\n            case 'GET':\n                let getOptions = {};\n                if (headers[\"Content-Type\"] && headers[\"Content-Type\"].indexOf(\"text\") > -1) {\n                    getOptions = { params: params, headers: headers, responseType: \"text\", withCredentials: true };\n                } else {\n                    getOptions = { params, headers, withCredentials: true };\n                }             \n                return this._http.get(url, getOptions).pipe(map(res => {\n                    let request_time = new Date().getTime() - start_time;\n                    return res;\n                }), catchError(err => this.handleError(err)));\n            case 'POST':\n                return this._http.post(url, body, { headers, withCredentials: true }).pipe(map(res => {\n                    let request_time = new Date().getTime() - start_time;\n                    return res;\n                }), catchError(err => this.handleError(err)));\n            case 'PUT':\n                return this._http.put(url, body, { headers, withCredentials: true }).pipe(map(res => res), catchError(err => this.handleError(err)));\n            case 'DELETE':\n                return this._http.delete(url, { headers, withCredentials: true }).pipe(map(res => res), catchError(err => this.handleError(err)));\n            default:\n                return null;\n        }\n    }\n    private handleError(error: HttpErrorResponse | any) {\n        return observableThrowError(error);;\n    }\n \n    showMessage(cssClass, msg) {\n        //console.log(\"show message cssClass \" + cssClass + \" msg is \" + msg);\n            var x = document.getElementById(\"alert-box\");\n            var classType = \"\";\n            x.innerHTML = msg;\n            if (cssClass == \"error\") classType = \"show-error\";\n            if (cssClass == \"success\") classType = \"show-sucess\";\n            x.className = classType;\n            setTimeout(function () {\n                x.className = x.className.replace(classType, \"\");\n            }, 5000);\n\n    }\n\n    public getCookie(name: string) {\n        //TODO test split and value\n            let ca: Array<string> = document.cookie.split('; ');\n            let caLen: number = ca.length;\n            let cookieName = name + \"=\";\n            let c: string;\n\n            for (let i: number = 0; i < caLen; i += 1) {\n                c = ca[i].replace(/^\\s\\+/g, \"\");\n                if (c.indexOf(cookieName) == 0) {\n                    return c.substring(cookieName.length, c.length);\n                }\n            }\n        return \"\";\n    }\n\n    public deleteCookie(name) {\n        this.setCookie(name, \"\", -1);\n    }\n\n    public setCookie(name: string, value: string, expireDays: number) {\n            let d: Date = new Date();\n            d.setTime(d.getTime() + expireDays * 24 * 60 * 60 * 1000);\n            let expires: string = \"expires=\" + d.toUTCString();\n            document.cookie = name + \"=\" + value + \"; \" + expires + \";\";\n    }\n\n    public timestampToData(ts) {\n        let d = new Date(ts);\n        let dd: any = d.getDate();\n        let mm: any = (d.getMonth() + 1);\n        let yy = d.getFullYear();\n\n        if (dd < 10) {\n            dd = '0' + dd;\n        }\n        if (mm < 10) {\n            mm = '0' + mm;\n        }\n        return dd + '-' + mm + '-' + yy;\n    }\n\n    public getTimeFromTimestamp(ts, isNoTime?: boolean) {\n    }\n\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-dataService',\n  template: `\n    <p>\n      data-service works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class DataServiceComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { DataServiceComponent } from './data-service.component';\n\n\n\n@NgModule({\n  declarations: [DataServiceComponent],\n  imports: [\n  ],\n  exports: [DataServiceComponent]\n})\nexport class DataServiceModule { }\n","/*\n * Public API Surface of data-service\n */\n\nexport * from './lib/data-service.service';\nexport * from './lib/data-service.component';\nexport * from './lib/data-service.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["Subject","map","catchError","observableThrowError","Injectable","Injector","Router","HttpClient","Component","NgModule"],"mappings":"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"}